
package az.unibank.stream.implementation;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "STREAMPort", targetNamespace = "STREAM")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface STREAMPort {


    /**
     * 
     * @return
     *     returns java.util.List<az.unibank.stream.implementation.Category>
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetCategoryList")
    @WebResult(name = "category", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetCategoryList", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetCategoryList")
    @ResponseWrapper(localName = "GetCategoryListResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetCategoryListResponse")
    @Action(input = "STREAM/STREAMPort/GetCategoryListRequest", output = "STREAM/STREAMPort/GetCategoryListResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetCategoryList/Fault/ServiceException")
    })
    public List<Category> getCategoryList()
        throws ServiceException
    ;

    /**
     * 
     * @param alias
     * @return
     *     returns java.util.List<az.unibank.stream.implementation.Service>
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetServiceList")
    @WebResult(name = "service", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetServiceList", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetServiceList")
    @ResponseWrapper(localName = "GetServiceListResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetServiceListResponse")
    @Action(input = "STREAM/STREAMPort/GetServiceListRequest", output = "STREAM/STREAMPort/GetServiceListResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetServiceList/Fault/ServiceException")
    })
    public List<Service> getServiceList(
        @WebParam(name = "alias", targetNamespace = "")
        String alias)
        throws ServiceException
    ;

    /**
     * 
     * @param alias
     * @return
     *     returns az.unibank.stream.implementation.Service
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetService")
    @WebResult(name = "service", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetService", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetService")
    @ResponseWrapper(localName = "GetServiceResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetServiceResponse")
    @Action(input = "STREAM/STREAMPort/GetServiceRequest", output = "STREAM/STREAMPort/GetServiceResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetService/Fault/ServiceException")
    })
    public Service getService(
        @WebParam(name = "alias", targetNamespace = "")
        String alias)
        throws ServiceException
    ;

    /**
     * 
     * @param size
     * @return
     *     returns java.util.List<az.unibank.stream.implementation.Icon>
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetIconList")
    @WebResult(name = "icon", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetIconList", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetIconList")
    @ResponseWrapper(localName = "GetIconListResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetIconListResponse")
    @Action(input = "STREAM/STREAMPort/GetIconListRequest", output = "STREAM/STREAMPort/GetIconListResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetIconList/Fault/ServiceException")
    })
    public List<Icon> getIconList(
        @WebParam(name = "size", targetNamespace = "")
        String size)
        throws ServiceException
    ;

    /**
     * 
     * @param size
     * @param id
     * @return
     *     returns az.unibank.stream.implementation.Icon
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetIcon")
    @WebResult(name = "icon", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetIcon", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetIcon")
    @ResponseWrapper(localName = "GetIconResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetIconResponse")
    @Action(input = "STREAM/STREAMPort/GetIconRequest", output = "STREAM/STREAMPort/GetIconResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetIcon/Fault/ServiceException")
    })
    public Icon getIcon(
        @WebParam(name = "id", targetNamespace = "")
        Integer id,
        @WebParam(name = "size", targetNamespace = "")
        String size)
        throws ServiceException
    ;

    /**
     * 
     * @param alias
     * @param detail
     * @return
     *     returns java.util.List<az.unibank.stream.implementation.Bill>
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetBillList")
    @WebResult(name = "list", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetBillList", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetBillList")
    @ResponseWrapper(localName = "GetBillListResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetBillListResponse")
    @Action(input = "STREAM/STREAMPort/GetBillListRequest", output = "STREAM/STREAMPort/GetBillListResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetBillList/Fault/ServiceException")
    })
    public List<Bill> getBillList(
        @WebParam(name = "alias", targetNamespace = "")
        String alias,
        @WebParam(name = "detail", targetNamespace = "")
        List<Detail> detail)
        throws ServiceException
    ;

    /**
     * 
     * @param amount
     * @param fee
     * @param alias
     * @param currency
     * @param originator
     * @param detail
     * @return
     *     returns java.lang.String
     * @throws ServiceException
     */
    @WebMethod(operationName = "Register")
    @WebResult(name = "serial", targetNamespace = "STREAM")
    @RequestWrapper(localName = "Register", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.Register")
    @ResponseWrapper(localName = "RegisterResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.RegisterResponse")
    @Action(input = "STREAM/STREAMPort/RegisterRequest", output = "STREAM/STREAMPort/RegisterResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/Register/Fault/ServiceException")
    })
    public String register(
        @WebParam(name = "alias", targetNamespace = "")
        String alias,
        @WebParam(name = "amount", targetNamespace = "")
        Integer amount,
        @WebParam(name = "fee", targetNamespace = "")
        Integer fee,
        @WebParam(name = "currency", targetNamespace = "")
        Integer currency,
        @WebParam(name = "originator", targetNamespace = "")
        String originator,
        @WebParam(name = "detail", targetNamespace = "")
        List<Detail> detail)
        throws ServiceException
    ;

    /**
     * 
     * @param serial
     * @return
     *     returns az.unibank.stream.implementation.Payment
     * @throws ServiceException
     */
    @WebMethod(operationName = "Pay")
    @WebResult(name = "payment", targetNamespace = "STREAM")
    @RequestWrapper(localName = "Pay", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.Pay")
    @ResponseWrapper(localName = "PayResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.PayResponse")
    @Action(input = "STREAM/STREAMPort/PayRequest", output = "STREAM/STREAMPort/PayResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/Pay/Fault/ServiceException")
    })
    public Payment pay(
        @WebParam(name = "serial", targetNamespace = "")
        String serial)
        throws ServiceException
    ;

    /**
     * 
     * @param offset
     * @param limit
     * @param from
     * @param originator
     * @param to
     * @return
     *     returns java.util.List<az.unibank.stream.implementation.Payment>
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetPaymentList")
    @WebResult(name = "payment", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetPaymentList", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetPaymentList")
    @ResponseWrapper(localName = "GetPaymentListResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetPaymentListResponse")
    @Action(input = "STREAM/STREAMPort/GetPaymentListRequest", output = "STREAM/STREAMPort/GetPaymentListResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetPaymentList/Fault/ServiceException")
    })
    public List<Payment> getPaymentList(
        @WebParam(name = "originator", targetNamespace = "")
        String originator,
        @WebParam(name = "from", targetNamespace = "")
        XMLGregorianCalendar from,
        @WebParam(name = "to", targetNamespace = "")
        XMLGregorianCalendar to,
        @WebParam(name = "offset", targetNamespace = "")
        Integer offset,
        @WebParam(name = "limit", targetNamespace = "")
        Integer limit)
        throws ServiceException
    ;

    /**
     * 
     * @param serial
     * @return
     *     returns az.unibank.stream.implementation.Payment
     * @throws ServiceException
     */
    @WebMethod(operationName = "GetPayment")
    @WebResult(name = "payment", targetNamespace = "STREAM")
    @RequestWrapper(localName = "GetPayment", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetPayment")
    @ResponseWrapper(localName = "GetPaymentResponse", targetNamespace = "STREAM", className = "az.unibank.stream.implementation.GetPaymentResponse")
    @Action(input = "STREAM/STREAMPort/GetPaymentRequest", output = "STREAM/STREAMPort/GetPaymentResponse", fault = {
        @FaultAction(className = ServiceException.class, value = "STREAM/STREAMPort/GetPayment/Fault/ServiceException")
    })
    public Payment getPayment(
        @WebParam(name = "serial", targetNamespace = "")
        String serial)
        throws ServiceException
    ;

}
